spring.application.name=leafwheels
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.type.preferred_enum_type=STRING
spring.session.store-type=redis
spring.session.redis.flush-mode=on_save
spring.session.redis.namespace=spring:session
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=
spring.data.redis.database=0

# =====================================
# PostgreSQL Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/leafwheels
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=user
spring.datasource.password=password
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.defer-datasource-initialization=true

# =====================================
# JWT Configuration
jwt.secret=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
jwt.access-token-expiration=3600000
jwt.refresh-token-expiration=604800000
jwt.issuer=leafwheels-api

# =====================================
# Security Configuration
security.max-login-attempts=5
security.account-lockout-duration=300000
security.password-reset-token-expiration=3600000

# =====================================
# Actuator & Prometheus Configuration
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.prometheus.access=unrestricted
management.prometheus.metrics.export.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# =====================================
# AWS Lex Configuration
AWS_LEX_BOT_ID=${AWS_LEX_BOT_ID:}
AWS_LEX_BOT_ALIAS_ID=${AWS_LEX_BOT_ALIAS_ID:TSTALIASID}
AWS_LEX_LOCALE_ID=${AWS_LEX_LOCALE_ID:en_US}
AWS_REGION=${AWS_REGION:us-east-1}
use-iam-roles=${USE_IAM_ROLES:false}
# AWS credentials are optional - if not provided, SDK will use IAM roles (ECS) or default credential chain
AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:}
AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:}

# =====================================
# Chatbot Configuration
chatbot.max-session-duration=3600000
chatbot.max-message-length=1000
chatbot.session-cleanup-interval=300000
chatbot.auto-setup=${CHATBOT_AUTO_SETUP:true}

# =====================================
# Rate Limiting Configuration
rate-limit.chat.requests-per-minute=20
rate-limit.chat.requests-per-hour=200
rate-limit.chat.requests-per-day=1000

# =====================================
# Content Filtering Configuration
content-filter.enabled=true
content-filter.whitelist-file=classpath:chat-allowlist.txt
content-filter.blacklist-file=classpath:chat-blocklist.txt
