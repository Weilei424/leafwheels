version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: leafwheels-postgres
    environment:
      POSTGRES_DB: leafwheels
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - leafwheels-net

  redis:
    image: redis:7-alpine
    container_name: leafwheels-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - leafwheels-net

  backend:
    build: ./leafwheels
    container_name: leafwheels-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/leafwheels
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_PASSWORD: ""
      JWT_SECRET: 404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
      JWT_ACCESS_TOKEN_EXPIRATION: 900000
      JWT_REFRESH_TOKEN_EXPIRATION: 604800000
      JWT_ISSUER: leafwheels-docker
      SECURITY_MAX_LOGIN_ATTEMPTS: 5
      SECURITY_ACCOUNT_LOCKOUT_DURATION: 300000
      SECURITY_PASSWORD_RESET_TOKEN_EXPIRATION: 3600000
      AWS_LEX_BOT_ID: ${AWS_LEX_BOT_ID}
      AWS_LEX_BOT_ALIAS_ID: ${AWS_LEX_BOT_ALIAS_ID:-TSTALIASID}
      AWS_LEX_LOCALE_ID: ${AWS_LEX_LOCALE_ID:-en_US}
      AWS_REGION: ${AWS_REGION:-us-east-1}
      USE_IAM_ROLES: ${USE_IAM_ROLES:-false}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-}
    depends_on:
      - postgres
      - redis
    ports:
      - "8080:8080"
    networks:
      - leafwheels-net

  frontend:
    build: ./frontend
    container_name: leafwheels-frontend
    ports:
      - "3000:3000"
    networks:
      - leafwheels-net
    restart: "no"
    depends_on:
      - backend

  prometheus:
    image: prom/prometheus:latest
    container_name: leafwheels-prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - leafwheels-net
    depends_on:
      - backend

  grafana:
    image: grafana/grafana:latest
    container_name: leafwheels-grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    configs:
      - source: grafana_datasource
        target: /etc/grafana/provisioning/datasources/prometheus.yml
      - source: grafana_dashboard_config
        target: /etc/grafana/provisioning/dashboards/dashboards.yml
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - leafwheels-net
    depends_on:
      - prometheus

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  leafwheels-net:

configs:
  prometheus_config:
    content: |
      global:
        scrape_interval: 15s
        evaluation_interval: 15s

      rule_files:
        # - "first_rules.yml"
        # - "second_rules.yml"

      scrape_configs:
        - job_name: 'prometheus'
          static_configs:
            - targets: ['localhost:9090']

        - job_name: 'leafwheels-backend'
          metrics_path: '/actuator/prometheus'
          static_configs:
            - targets: ['backend:8080']
          scrape_interval: 5s
          scrape_timeout: 5s

  grafana_datasource:
    content: |
      apiVersion: 1

      datasources:
        - name: Prometheus
          type: prometheus
          access: proxy
          url: http://prometheus:9090
          isDefault: true
          editable: true

  grafana_dashboard_config:
    content: |
      apiVersion: 1

      providers:
        - name: 'LeafWheels Dashboards'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          updateIntervalSeconds: 10
          allowUiUpdates: true
          options:
            path: /var/lib/grafana/dashboards
