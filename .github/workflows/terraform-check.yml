name: Terraform Check

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-check.yml'

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ~1.0
    
    - name: Terraform Format Check
      id: terraform-fmt
      run: |
        cd terraform
        terraform fmt -check -recursive
      continue-on-error: false
    
    - name: Terraform Init
      run: |
        cd terraform
        terraform init -backend=false
    
    - name: Terraform Validate
      id: terraform-validate
      run: |
        cd terraform
        terraform validate
    
    - name: Terraform Plan (Dry Run)
      id: terraform-plan
      run: |
        cd terraform
        if [ -n "${{ secrets.AWS_ACCESS_KEY_ID }}" ]; then
          terraform plan -input=false -no-color 2>&1 | tee plan_output.txt
        else
          echo "‚ö†Ô∏è Terraform plan skipped - AWS credentials not configured" > plan_output.txt
          echo "Add AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY to repository secrets to enable plan generation."
        fi
        echo "plan_output<<EOF" >> $GITHUB_OUTPUT
        cat plan_output.txt >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION || 'us-east-1' }}
      continue-on-error: true
    
    - name: Comment PR
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const planOutput = `${{ steps.terraform-plan.outputs.plan_output }}`;
          
          // Truncate plan output if too long (GitHub comment limit is ~65k chars)
          const maxLength = 60000;
          const truncatedPlan = planOutput.length > maxLength 
            ? planOutput.substring(0, maxLength) + '\n\n... (output truncated)'
            : planOutput;
          
          const comment = `## Terraform Check Results
          
          ### Format Check
          ${{ steps.terraform-fmt.outcome == 'success' && '‚úÖ Passed' || '‚ùå Failed - Run `terraform fmt -recursive` to fix' }}
          
          ### Validation Check  
          ${{ steps.terraform-validate.outcome == 'success' && '‚úÖ Passed' || '‚ùå Failed' }}
          
          ### Plan Check
          ${{ secrets.AWS_ACCESS_KEY_ID && '‚úÖ Generated successfully' || '‚ö†Ô∏è Skipped (requires AWS credentials)' }}
          
          <details>
          <summary>üìã Terraform Plan Output</summary>
          
          \`\`\`
          ${truncatedPlan}
          \`\`\`
          
          </details>
          `;
          
          try {
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } catch (error) {
            console.log('Could not create comment:', error.message);
          }