name: Terraform Check

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-check.yml'

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ~1.0
    
    - name: Terraform Format Check
      id: terraform-fmt
      run: |
        cd terraform
        terraform fmt -check -recursive
      continue-on-error: false
    
    - name: Terraform Init
      run: |
        cd terraform
        terraform init -backend=false
    
    - name: Terraform Validate
      id: terraform-validate
      run: |
        cd terraform
        terraform validate
    
    - name: Terraform Plan (Dry Run)
      id: terraform-plan
      run: |
        cd terraform
        terraform plan -input=false -no-color
      env:
        AWS_ACCESS_KEY_ID: dummy
        AWS_SECRET_ACCESS_KEY: dummy
        AWS_DEFAULT_REGION: us-east-1
      continue-on-error: true
    
    - name: Comment PR
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const comment = `## Terraform Check Results
          
          ### Format Check
          ${{ steps.terraform-fmt.outcome == 'success' && '✅ Passed' || '❌ Failed - Run `terraform fmt -recursive` to fix' }}
          
          ### Validation Check  
          ${{ steps.terraform-validate.outcome == 'success' && '✅ Passed' || '❌ Failed' }}
          
          ### Plan Check
          ${{ steps.terraform-plan.outcome == 'success' && '✅ Generated successfully' || '⚠️ Plan had issues (non-blocking)' }}
          `;
          
          try {
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } catch (error) {
            console.log('Could not create comment:', error.message);
          }